public class BinaryTree {
    protected Node root;

    public BinaryTree() {
        this(null);
    }

    public BinaryTree(Node root) {
        this.root = root;
    }

    public boolean isEmpty() {
        return root == null;
    }

    public int getHeight() {
        return isEmpty() ? -1 : root.getHeight();
    }

    public void inOrderTraversal() {
        inOrderTraversal(root);
        
    }

    private void inOrderTraversal(Node node) {
        if (node == null) return;

        inOrderTraversal(node.getLeft());
        System.out.print(node.getId() + "\n");
        inOrderTraversal(node.getRight());
    }

  

}
